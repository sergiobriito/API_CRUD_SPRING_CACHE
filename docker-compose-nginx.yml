version: '3.9'

services:
  db:
    image: "postgres"
    command: postgres -c 'max_connections=1000'
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '2GB'
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: DB_USERS
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MAX_CONNECTIONS: 20000
    networks:
      - app-network

  cache:
    image: "redis"
    command: ["redis-server", "--appendonly", "no", "--save ''"]
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '1GB'

  api1:
    build: .
    hostname: api1
    depends_on:
      - db
      - cache
    expose:
      - "8080:8080"
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: '2GB'
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db/DB_USERS
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_REDIS_HOST: cache
      SPRING_REDIS_PORT: 6379
    networks:
      - app-network

  api2:
    build: .
    hostname: api2
    depends_on:
      - db
      - cache
    expose:
      - "8080:8080"
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: '2GB'
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db/DB_USERS
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_REDIS_HOST: cache
      SPRING_REDIS_PORT: 6379
    networks:
      - app-network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '1GB'
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
